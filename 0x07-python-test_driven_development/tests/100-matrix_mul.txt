==========================
TESTS FOR THE matrix_mul MODULE
THIS CODE WILL BE COMPILED WITH:
python3 -m doctest -v ./tests/100-matrix_mul.txt
==========================

IMPORT THE MODULE
=================

    >>> matrix_mul = __import__('100-matrix_mul').matrix_mul

TEST CASE: SUCCESS

PROD OF TWO MATRICES
matrix as a list of lists
consisting of integers and float values
(signed and unsigned)
====================

    >>> matrix_mul([[1, 2], [3, 4]], [[1, 2], [3, 4]])
    [[7, 10], [15, 22]]

    >>> matrix_mul([[1.1, -2.2], [-5.5111111, 6]], [[2, 3], [4, -7]])
    [[-6.6000000000000005, 18.700000000000003], [12.9777778, -58.533333299999995]]

TEST CASE: ERROR
================

NO ARGS
=======
    >>> matrix_mul()
    Traceback (most recent call last):
    TypeError: matrix_mul() missing 2 required positional arguments: 'm_a' and 'm_b'

PASSING ONLY ONE PARAMETER
==========================
    >>> matrix_mul([[6, 3, 2], [9, 2, 1 ]])
    Traceback (most recent call last):
    TypeError: matrix_mul() missing 1 required positional argument: 'm_b'

NON LIST VALUES AS PARAMETERS
==================================
    >>> matrix_mul([[3, 6]], 9)
    Traceback (most recent call last):
    TypeError: m_b must be a list

    >>> matrix_mul("hey young world", [[1, 2]])
    Traceback (most recent call last):
    TypeError: m_a must be a list

    >>> matrix_mul(["Monty", "Python"], [[1, 2]])
    Traceback (most recent call last):
    TypeError: m_a must be a list of lists

    >>> matrix_mul([[1, 2]], ["Monty", "Python"])
    Traceback (most recent call last):
    TypeError: m_b must be a list of lists

EMPTY LIST
==========

    >>> matrix_mul([], [[9, 4]])
    Traceback (most recent call last):
    ValueError: m_a can't be empty

    >>> matrix_mul([[9, 4]], [[]])
    Traceback (most recent call last):
    ValueError: m_b can't be empty

NON INT/FLOAT VALUES IN LIST
============================

    >>> matrix_mul([[1, 2], ["multiplied", 9]], [[9, 4], [2, 5]])
    Traceback (most recent call last):
    TypeError: m_a should contain only integers or floats

    >>> matrix_mul([[9, 4], [2, 5]], [[1, 2], ["multiplied", 9]])
    Traceback (most recent call last):
    TypeError: m_b should contain only integers or floats

IRREGULAR SIZED MATRIX
======================
    >>> matrix_mul([[1, 1], [2]], [[1, 1], [2, 2]])
    Traceback (most recent call last):
    TypeError: each row of m_a must be of the same size

    >>> matrix_mul([[1, 1], [2, 2]], [[1], [2, 2]])
    Traceback (most recent call last):
    TypeError: each row of m_b must be of the same size

MATRIX m_a IS BIGGER THAN MATRIX m_b
====================================
    >>> matrix_mul([[9, 4, 4], [2, 8, 2]], [[1, 2], [4, 9]])
    Traceback (most recent call last):
    ValueError: m_a and m_b can't be multiplied

